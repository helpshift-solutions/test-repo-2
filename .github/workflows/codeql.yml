name: "CodeQL Analysis and Detailed SendGrid Alert"

on:
  push:
    branches: ["main", "staging"]
  pull_request:
    branches: ["main", "staging"]

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install jq to parse the SARIF file
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # Initialize CodeQL and run the analysis
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      # Perform CodeQL Analysis and save the output to a local file
      - name: Perform CodeQL Analysis
        id: perform_analysis
        uses: github/codeql-action/analyze@v2
        with:
          output: results

      # Upload the SARIF file as an artifact to the workflow run
      # This is how you can view the raw results without the GitHub Security tab
      - name: Upload CodeQL analysis results as a build artifact
        uses: actions/upload-artifact@v3
        with:
          name: codeql-results
          path: results/ # The path to the directory containing the SARIF file.

      # Since we have the SARIF file locally, we can now parse it.
      # This step checks for findings and builds the email body.
      - name: Generate email body from SARIF findings
        id: create_email_body
        run: |
          SARIF_FILE="results/javascript.sarif"

          # Check if the SARIF file exists and has any results
          if [ -f "$SARIF_FILE" ] && [ "$(jq '.runs[0].results | length' "$SARIF_FILE")" -gt 0 ]; then
            echo "has_findings=true" >> $GITHUB_OUTPUT
            echo "findings_count=$(jq '.runs[0].results | length' "$SARIF_FILE")" >> $GITHUB_OUTPUT
            
            # Use jq to iterate over the results and format the output
            EMAIL_BODY=$(jq -r '.runs[0].results | .[] | 
              "**Rule ID:** \(.ruleId)
              **Message:** \(.message.text)
              **Location:** \(.locations[0].physicalLocation.artifactLocation.uri):\(.locations[0].physicalLocation.region.startLine)
              **More Info:** \(.ruleId | split("/") | last | "https://codeql.github.com/codeql-query-help/javascript/\(.)/")
              ---"' "$SARIF_FILE" | sed -e 's/^[ \t]*//' | tr '\n' '\r\n')

            # The body must be a single line for the output to work
            echo "email_body<<EOF" >> $GITHUB_OUTPUT
            echo "$EMAIL_BODY" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "has_findings=false" >> $GITHUB_OUTPUT
          fi
        shell: bash

      # Send an email with SendGrid if findings exist
      - name: Send vulnerability alert email
        if: steps.create_email_body.outputs.has_findings == 'true'
        uses: peter-evans/sendgrid-action@v1
        env:
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          # The following environment variables are passed to the SendGrid Action.
          TO: "ishita.sharma@helpshift.com"
          FROM: "alerts@ms.helpshift.live"
          SUBJECT: "CodeQL Alert: ${{ steps.create_email_body.outputs.findings_count }} new vulnerabilities in ${{ github.repository }}"
          BODY: |
            A CodeQL scan found new security vulnerabilities in the ${{ github.repository }} repository.

            **Branch:** ${{ github.ref_name }}
            **Commit:** ${{ github.sha }}

            Here is a summary of the findings:

            ${{ steps.create_email_body.outputs.email_body }}
